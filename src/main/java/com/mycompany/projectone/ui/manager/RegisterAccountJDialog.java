/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.projectone.ui.manager;

import com.mycompany.projectone.controller.RegisterAccountController;
import com.mycompany.projectone.dao.impl.AccountDAOImpl;
import com.mycompany.projectone.entity.Account;
import com.mycompany.projectone.ui.LoginUI;
import com.mycompany.projectone.util.XDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Gaudomun
 */
public class RegisterAccountJDialog extends javax.swing.JDialog implements RegisterAccountController {

    /**
     * Creates new form CreateAccountJDialog
     */
    public RegisterAccountJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        groRole = new javax.swing.ButtonGroup();
        pnlProfile = new javax.swing.JPanel();
        lblProfile = new javax.swing.JLabel();
        pnlInput = new javax.swing.JPanel();
        pnlInputField = new javax.swing.JPanel();
        lblRegister = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        lblPass = new javax.swing.JLabel();
        lblConfirm = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        txtConfirm = new javax.swing.JPasswordField();
        chkShowPass = new javax.swing.JCheckBox();
        lblEmpID = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        rdoManager = new javax.swing.JRadioButton();
        rdoEmp = new javax.swing.JRadioButton();
        lblRole = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblAccID = new javax.swing.JLabel();
        txtAccID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tạo tài khoản");
        setPreferredSize(new java.awt.Dimension(550, 350));
        getContentPane().setLayout(new java.awt.BorderLayout(10, 0));

        pnlProfile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        lblProfile.setIcon(new javax.swing.ImageIcon("C:\\Users\\gaudo.NGUYNQUYN\\DuAnMot\\src\\main\\resources\\book_icon.jpg")); // NOI18N

        javax.swing.GroupLayout pnlProfileLayout = new javax.swing.GroupLayout(pnlProfile);
        pnlProfile.setLayout(pnlProfileLayout);
        pnlProfileLayout.setHorizontalGroup(
            pnlProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
            .addGroup(pnlProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblProfile, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
        );
        pnlProfileLayout.setVerticalGroup(
            pnlProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
            .addGroup(pnlProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblProfile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE))
        );

        getContentPane().add(pnlProfile, java.awt.BorderLayout.LINE_START);

        pnlInput.setPreferredSize(new java.awt.Dimension(300, 300));
        pnlInput.setLayout(new java.awt.BorderLayout());

        pnlInputField.setPreferredSize(new java.awt.Dimension(300, 200));
        java.awt.GridBagLayout pnlInputFieldLayout = new java.awt.GridBagLayout();
        pnlInputFieldLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        pnlInputFieldLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        pnlInputField.setLayout(pnlInputFieldLayout);

        lblRegister.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lblRegister.setForeground(new java.awt.Color(0, 0, 255));
        lblRegister.setText("ĐĂNG KÍ TÀI KHOẢN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 1);
        pnlInputField.add(lblRegister, gridBagConstraints);

        lblUser.setText("Tên tài khoản");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        pnlInputField.add(lblUser, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlInputField.add(txtUser, gridBagConstraints);

        lblPass.setText("Nhập mật khẩu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        pnlInputField.add(lblPass, gridBagConstraints);

        lblConfirm.setText("Nhập lại mật khẩu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        pnlInputField.add(lblConfirm, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlInputField.add(txtPass, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlInputField.add(txtConfirm, gridBagConstraints);

        chkShowPass.setText("Hiện mật khẩu");
        chkShowPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkShowPassActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlInputField.add(chkShowPass, gridBagConstraints);

        lblEmpID.setText("Mã nhân viên");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        pnlInputField.add(lblEmpID, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlInputField.add(txtEmpID, gridBagConstraints);

        rdoManager.setText("Quản lý");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        pnlInputField.add(rdoManager, gridBagConstraints);

        rdoEmp.setText("Nhân viên");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        pnlInputField.add(rdoEmp, gridBagConstraints);

        lblRole.setText("Vai trò");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        pnlInputField.add(lblRole, gridBagConstraints);

        btnCreate.setBackground(new java.awt.Color(0, 0, 0));
        btnCreate.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Tạo tài khoản");
        groRole.add(btnCreate);
        btnCreate.setOpaque(true);
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 3;
        pnlInputField.add(btnCreate, gridBagConstraints);

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Hủy");
        groRole.add(btnCancel);
        btnCancel.setOpaque(true);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        pnlInputField.add(btnCancel, gridBagConstraints);

        lblAccID.setText("Mã tài khoản");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlInputField.add(lblAccID, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlInputField.add(txtAccID, gridBagConstraints);

        pnlInput.add(pnlInputField, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlInput, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        this.createDB();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.clear();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void chkShowPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkShowPassActionPerformed
        if(chkShowPass.isSelected()) {
            txtPass.setEchoChar((char)0);
            txtConfirm.setEchoChar((char)0);
        }else {
            txtPass.setEchoChar('*');
            txtConfirm.setEchoChar('*');
        }
        
    }//GEN-LAST:event_chkShowPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterAccountJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterAccountJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterAccountJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterAccountJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RegisterAccountJDialog dialog = new RegisterAccountJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreate;
    private javax.swing.JCheckBox chkShowPass;
    private javax.swing.ButtonGroup groRole;
    private javax.swing.JLabel lblAccID;
    private javax.swing.JLabel lblConfirm;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblRegister;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlInputField;
    private javax.swing.JPanel pnlProfile;
    private javax.swing.JRadioButton rdoEmp;
    private javax.swing.JRadioButton rdoManager;
    private javax.swing.JTextField txtAccID;
    private javax.swing.JPasswordField txtConfirm;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    AccountDAOImpl accDao = new AccountDAOImpl();
    
    
    @Override
    public Account getForm() {
        Account account = new Account();
        
        account.setAccountID(Integer.parseInt(txtAccID.getText()));
        account.setUsername(txtUser.getText());
        account.setEmployeeID(Integer.parseInt(txtEmpID.getText()));
        if(rdoManager.isSelected()) account.setRole(true);
        else account.setRole(false);
        account.setPassword(txtPass.getText());
        account.setActive(true);
        return account;
    }

    @Override
    public void createDB() {
        Account acc = this.getForm();
        if(validateForm()) {
            accDao.create(acc);
            XDialog.alert("Đã thêm thành công tài khoản vào csdl");
            LoginUI login = new LoginUI(new javax.swing.JFrame(), true);
            login.setVisible(true);
        }

    }

    @Override
    public boolean validateForm() {
        String user = txtUser.getText().trim();
        String accID = txtAccID.getText().trim();
        String pass = txtPass.getText().trim();
        String confirm = txtConfirm.getText().trim();
        String empID = txtEmpID.getText().trim();
        
        // Kiểm tra ô trống
        if(user.isEmpty() || accID.isEmpty() || pass.isEmpty() || confirm.isEmpty() || empID.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Các ô không được để trống!");
            return false;
        }
        
        // Kiểm tra pass = confirm
        if(!pass.equals(confirm)) {
            JOptionPane.showMessageDialog(this, "Mật khẩu xác nhận không khớp!");
            return false;
        }
        
        // Kiểm tra định dạng cho Username
        if(rdoManager.isSelected()) {
        if(!user.matches("quanly\\d+")) {
            JOptionPane.showMessageDialog(this, "Tên quản lý phải có dạng quanly + số!");
            return false;
        }
        } else if(rdoEmp.isSelected()) {
            if(!user.matches("nhanvien\\d+")) {
                JOptionPane.showMessageDialog(this, "Tên nhân viên phải có dạng nhanvien + số!");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn phải chọn quyền cho tài khoản!");
            return false;
        }
        
        // Kiểm tra mã nhân viên có tồn tại trong csdl
        if(!isEmpIDExists(Integer.parseInt(empID))) {
            JOptionPane.showMessageDialog(this, "Mã nhân viên này không tồn tại!", "Không hợp lệ", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Kiểm tra mã tài khoản có tồn tại trong csdl
        if(isAccIDExists(Integer.parseInt(accID))) {
            JOptionPane.showMessageDialog(this, "Mã tài khoản này đã tồn tại!", "Không hợp lệ", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }
    
    public boolean isEmpIDExists(int empID) {
        Account account = accDao.findByEmpID(empID);
       
        return account != null;
    }
    
    public boolean isAccIDExists(int accID) {
        Account account = accDao.findById(accID);
        
        return account != null;
    }

    @Override
    public void clear() {
        txtAccID.setText("");
        txtUser.setText("");
        txtEmpID.setText("");
        groRole.clearSelection();
        txtPass.setText("");
        txtConfirm.setText("");
    }
}
