/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.projectone.ui.manager;

import com.mycompany.projectone.controller.PromotionController;
import com.mycompany.projectone.dao.impl.PromotionDAOImpl;
import com.mycompany.projectone.entity.Promotion;
import com.mycompany.projectone.util.XIcon;
import com.mycompany.projectone.util.XDate;
import com.mycompany.projectone.util.XDialog;
import com.mycompany.projectone.util.XFile;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gaudomun
 */
public class PromotionManagerJDialog extends javax.swing.JDialog implements PromotionController{

    /**
     * Creates new form PromotionManagerJDialog
     */
    public PromotionManagerJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groStatus = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tabs = new javax.swing.JTabbedPane();
        pnlPromoList = new javax.swing.JPanel();
        pnlFilter = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblBeginDate = new javax.swing.JLabel();
        dateBegin = new com.toedter.calendar.JDateChooser();
        lblEndDate = new javax.swing.JLabel();
        dateEnd = new com.toedter.calendar.JDateChooser();
        btnFIlter = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        pnlButtons = new javax.swing.JPanel();
        btnCheckAll = new javax.swing.JButton();
        btnUncheckAll = new javax.swing.JButton();
        btnDeleteAll = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPromos = new javax.swing.JTable();
        pnlInput = new javax.swing.JPanel();
        pnlControlButtons = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        pnlInputField = new javax.swing.JPanel();
        pnlPromo = new javax.swing.JPanel();
        lblPromoID = new javax.swing.JLabel();
        txtPromoID = new javax.swing.JTextField();
        lblPromoTitle = new javax.swing.JLabel();
        txtPromoTitle = new javax.swing.JTextField();
        pnlDate = new javax.swing.JPanel();
        lblStart = new javax.swing.JLabel();
        dateChooserBegin = new com.toedter.calendar.JDateChooser();
        lblEnd = new javax.swing.JLabel();
        dateChooserEnd = new com.toedter.calendar.JDateChooser();
        pnlStatus = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        rdoActive = new javax.swing.JRadioButton();
        rdoInactive = new javax.swing.JRadioButton();
        lblDiscountValue = new javax.swing.JLabel();
        sliderDiscountVal = new javax.swing.JSlider();
        pnlDescription = new javax.swing.JPanel();
        lblDescription = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý chương trình khuyến mãi");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlPromoList.setMinimumSize(new java.awt.Dimension(690, 43));
        pnlPromoList.setLayout(new java.awt.BorderLayout(0, 10));

        pnlFilter.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        lblID.setText("Mã chương trình");
        pnlFilter.add(lblID);
        pnlFilter.add(txtID);

        lblBeginDate.setText("Từ ngày");
        pnlFilter.add(lblBeginDate);
        pnlFilter.add(dateBegin);

        lblEndDate.setText("Đến ngày");
        pnlFilter.add(lblEndDate);
        pnlFilter.add(dateEnd);

        btnFIlter.setText("Lọc");
        btnFIlter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFIlterActionPerformed(evt);
            }
        });
        pnlFilter.add(btnFIlter);

        btnClear.setText("Làm mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlFilter.add(btnClear);

        pnlPromoList.add(pnlFilter, java.awt.BorderLayout.PAGE_START);

        pnlButtons.setBackground(new java.awt.Color(153, 255, 153));

        btnCheckAll.setBackground(new java.awt.Color(153, 153, 153));
        btnCheckAll.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCheckAll.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckAll.setText("Chọn tất cả");
        btnCheckAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckAllActionPerformed(evt);
            }
        });

        btnUncheckAll.setText("Bỏ chọn tất cả");
        btnUncheckAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUncheckAllActionPerformed(evt);
            }
        });

        btnDeleteAll.setText("Xóa các mục đã chọn");
        btnDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllActionPerformed(evt);
            }
        });

        btnExcel.setBackground(new java.awt.Color(51, 153, 0));
        btnExcel.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnExcel.setForeground(new java.awt.Color(255, 255, 255));
        btnExcel.setText("Xuất Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonsLayout.createSequentialGroup()
                .addContainerGap(180, Short.MAX_VALUE)
                .addComponent(btnExcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCheckAll)
                .addGap(18, 18, 18)
                .addComponent(btnUncheckAll)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteAll)
                .addGap(37, 37, 37))
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonsLayout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheckAll)
                    .addComponent(btnUncheckAll)
                    .addComponent(btnDeleteAll)
                    .addComponent(btnExcel))
                .addGap(34, 34, 34))
        );

        pnlPromoList.add(pnlButtons, java.awt.BorderLayout.PAGE_END);

        tblPromos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã giảm giá", "Tên chương trình", "Mô tả", "Ngày bắt đầu", "Ngày kết thúc", "Trạng thái", "Mức giảm giá", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblPromos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPromosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPromos);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlTable.setBorder(javax.swing.BorderFactory.createTitledBorder(
            javax.swing.BorderFactory.createLineBorder(java.awt.Color.RED),
            "Bảng khuyến mãi",
            javax.swing.border.TitledBorder.LEFT,
            javax.swing.border.TitledBorder.TOP));

    pnlPromoList.add(pnlTable, java.awt.BorderLayout.CENTER);

    tabs.addTab("Danh sách chương trình khuyến mãi", pnlPromoList);

    pnlInput.setPreferredSize(new java.awt.Dimension(690, 438));
    pnlInput.setLayout(new java.awt.BorderLayout(0, 10));

    pnlControlButtons.setLayout(new java.awt.GridLayout(2, 4, 0, 10));

    btnAdd.setToolTipText("Thêm");
    btnAdd.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAddActionPerformed(evt);
        }
    });
    pnlControlButtons.add(btnAdd);
    javax.swing.ImageIcon icon = XIcon.getIcon("/add.png", 50, 50);

    btnAdd.setIcon(icon);

    btnUpdate.setToolTipText("Cập nhật");
    btnUpdate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnUpdateActionPerformed(evt);
        }
    });
    pnlControlButtons.add(btnUpdate);
    javax.swing.ImageIcon upIcon = XIcon.getIcon("/up.png", 50, 50);

    btnUpdate.setIcon(upIcon);

    btnDelete.setToolTipText("Xóa");
    btnDelete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnDeleteActionPerformed(evt);
        }
    });
    pnlControlButtons.add(btnDelete);
    javax.swing.ImageIcon delIcon = XIcon.getIcon("/delete.png", 50, 50);

    btnDelete.setIcon(delIcon);

    btnRefresh.setToolTipText("Làm mới");
    btnRefresh.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRefreshActionPerformed(evt);
        }
    });
    pnlControlButtons.add(btnRefresh);
    javax.swing.ImageIcon reIcon = XIcon.getIcon("/refresh.png", 50, 50);

    btnRefresh.setIcon(reIcon);

    btnFirst.setToolTipText("Đến đầu danh sách");
    btnFirst.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnFirstActionPerformed(evt);
        }
    });
    pnlControlButtons.add(btnFirst);
    javax.swing.ImageIcon firstIcon = XIcon.getIcon("/MoveFirst.png", 50, 50);

    btnFirst.setIcon(firstIcon);

    btnPrev.setToolTipText("Trước");
    btnPrev.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnPrevActionPerformed(evt);
        }
    });
    pnlControlButtons.add(btnPrev);
    javax.swing.ImageIcon prevIcon = XIcon.getIcon("/MovePrevious.png", 50, 50);

    btnPrev.setIcon(prevIcon);

    btnNext.setToolTipText("Sau");
    btnNext.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnNextActionPerformed(evt);
        }
    });
    pnlControlButtons.add(btnNext);
    javax.swing.ImageIcon nextIcon = XIcon.getIcon("/MoveNext.png", 50, 50);

    btnNext.setIcon(nextIcon);

    btnLast.setToolTipText("Đến cuối danh sách");
    btnLast.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnLastActionPerformed(evt);
        }
    });
    pnlControlButtons.add(btnLast);
    javax.swing.ImageIcon lastIcon = XIcon.getIcon("/MoveLast.png", 50, 50);

    btnLast.setIcon(lastIcon);

    pnlInput.add(pnlControlButtons, java.awt.BorderLayout.PAGE_END);

    pnlInputField.setLayout(new java.awt.GridLayout(4, 0, 0, 20));

    pnlPromo.setLayout(new java.awt.GridLayout(1, 0, 10, 10));

    lblPromoID.setText("Mã chương trình khuyến mãi");
    pnlPromo.add(lblPromoID);
    pnlPromo.add(txtPromoID);

    lblPromoTitle.setText("Tên chương trình khuyến mãi");
    pnlPromo.add(lblPromoTitle);
    pnlPromo.add(txtPromoTitle);

    pnlInputField.add(pnlPromo);

    pnlDate.setLayout(new java.awt.GridLayout(1, 0, 10, 10));

    lblStart.setText("Ngày bắt đầu");
    pnlDate.add(lblStart);
    pnlDate.add(dateChooserBegin);

    lblEnd.setText("Ngày kết thúc");
    pnlDate.add(lblEnd);
    pnlDate.add(dateChooserEnd);

    pnlInputField.add(pnlDate);

    pnlStatus.setLayout(new java.awt.GridLayout(1, 0));
    pnlStatus.add(javax.swing.Box.createHorizontalStrut(10));

    lblStatus.setText("Trạng thái");
    pnlStatus.add(lblStatus);

    groStatus.add(rdoActive);
    rdoActive.setText("Kích hoạt");
    pnlStatus.add(rdoActive);

    groStatus.add(rdoInactive);
    rdoInactive.setText("Hủy");
    pnlStatus.add(rdoInactive);

    lblDiscountValue.setText("Mức giảm giá");
    pnlStatus.add(lblDiscountValue);

    sliderDiscountVal.setMajorTickSpacing(10);
    sliderDiscountVal.setMinorTickSpacing(5);
    sliderDiscountVal.setPaintTicks(true);
    sliderDiscountVal.setValue(0);
    sliderDiscountVal.addChangeListener(new javax.swing.event.ChangeListener() {
        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            sliderDiscountValStateChanged(evt);
        }
    });
    pnlStatus.add(sliderDiscountVal);

    pnlInputField.add(pnlStatus);

    pnlDescription.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

    lblDescription.setText("Mô tả");
    pnlDescription.add(lblDescription);

    txtDesc.setColumns(20);
    txtDesc.setRows(5);
    jScrollPane2.setViewportView(txtDesc);

    pnlDescription.add(jScrollPane2);

    pnlInputField.add(pnlDescription);

    pnlInput.add(pnlInputField, java.awt.BorderLayout.CENTER);

    tabs.addTab("Tạo mới chương trình khuyến mãi", pnlInput);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tabs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.open();
    }//GEN-LAST:event_formWindowOpened

    private void tblPromosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPromosMouseClicked
        if(evt.getClickCount() == 2) this.edit();
    }//GEN-LAST:event_tblPromosMouseClicked

    private void btnCheckAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckAllActionPerformed
        this.checkAll();
    }//GEN-LAST:event_btnCheckAllActionPerformed

    private void btnUncheckAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUncheckAllActionPerformed
        this.uncheckAll();
    }//GEN-LAST:event_btnUncheckAllActionPerformed

    private void btnDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllActionPerformed
        this.deleteCheckedItems();
    }//GEN-LAST:event_btnDeleteAllActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.moveFirst();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.moveLast();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        this.movePrevious();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.moveNext();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnFIlterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFIlterActionPerformed
        Promotion promo = null;
        if(!txtID.getText().equals(""))  promo = dao.findById(Integer.valueOf(txtID.getText()));
        
        if(txtID.getText().trim().isBlank() && dateChooserBegin.getDate() != null && dateChooserEnd.getDate() != null) this.filterByTimeRange();
        
        if(!txtID.getText().trim().isBlank() && promo != null && dateChooserBegin.getDate() == null && dateChooserEnd.getDate() == null) {
            model = (DefaultTableModel)tblPromos.getModel();
            model.setRowCount(0);
            
            Object[] rowData = {
              promo.getPromotionID(),
              promo.getPromoTitle(),
              promo.getDescription(),
              promo.getStartDate(),
              promo.getEndDate(),
              promo.isActive() ? "Kích hoạt" : "Đã hủy",
              promo.getDiscountValue()
            };
            model.addRow(rowData);
        }
        
        if(txtID.getText().isBlank() && dateBegin.getDate() == null && dateEnd.getDate() == null) 
            XDialog.alert("Không được để trống ô nhập!");
        
        
    }//GEN-LAST:event_btnFIlterActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtID.setText("");
        dateBegin.setDate(null);
        dateEnd.setDate(null);
        this.fillToTable();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        this.create();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        this.update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void sliderDiscountValStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderDiscountValStateChanged
        lblDiscountValue.setText("Mức giảm giá (" + sliderDiscountVal.getValue() + "%)");
    }//GEN-LAST:event_sliderDiscountValStateChanged

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        this.clear();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       this.delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        this.exportExcel();
    }//GEN-LAST:event_btnExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PromotionManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PromotionManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PromotionManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PromotionManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PromotionManagerJDialog dialog = new PromotionManagerJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCheckAll;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteAll;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnFIlter;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUncheckAll;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser dateBegin;
    private com.toedter.calendar.JDateChooser dateChooserBegin;
    private com.toedter.calendar.JDateChooser dateChooserEnd;
    private com.toedter.calendar.JDateChooser dateEnd;
    private javax.swing.ButtonGroup groStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBeginDate;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblDiscountValue;
    private javax.swing.JLabel lblEnd;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblPromoID;
    private javax.swing.JLabel lblPromoTitle;
    private javax.swing.JLabel lblStart;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlControlButtons;
    private javax.swing.JPanel pnlDate;
    private javax.swing.JPanel pnlDescription;
    private javax.swing.JPanel pnlFilter;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlInputField;
    private javax.swing.JPanel pnlPromo;
    private javax.swing.JPanel pnlPromoList;
    private javax.swing.JPanel pnlStatus;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JRadioButton rdoActive;
    private javax.swing.JRadioButton rdoInactive;
    private javax.swing.JSlider sliderDiscountVal;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblPromos;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPromoID;
    private javax.swing.JTextField txtPromoTitle;
    // End of variables declaration//GEN-END:variables

    List<Promotion> list = List.of();
    
    PromotionDAOImpl dao = new PromotionDAOImpl();
    
    DefaultTableModel model;
    
    @Override
    public void open() {
        this.setLocationRelativeTo(null);
        this.fillToTable();
    }

    @Override
    public void setForm(Promotion entity) {
        txtPromoID.setText(String.valueOf(entity.getPromotionID()));
        txtPromoTitle.setText(entity.getPromoTitle());
        if(entity.getStartDate() != null)
            dateChooserBegin.setDate(new java.util.Date(entity.getStartDate().getTime()));
        else
            dateChooserBegin.setDate(null);

        if(entity.getEndDate() != null)
            dateChooserEnd.setDate(new java.util.Date(entity.getEndDate().getTime()));
        else
            dateChooserEnd.setDate(null);

        txtDesc.setText(entity.getDescription());
        if(entity.getDiscountValue() != null) sliderDiscountVal.setValue(entity.getDiscountValue().intValue());
        else sliderDiscountVal.setValue(0);
        
       if (entity.isActive()) {
            rdoActive.setSelected(true);
        } else {
            rdoInactive.setSelected(true);
        }

    }

    @Override
    public Promotion getForm() {
        Promotion entity = new Promotion();
        
        dateChooserBegin.setDateFormatString("yyyy-MM-dd");
        dateChooserEnd.setDateFormatString("yyyy-MM-dd");
        
        java.util.Date utilStart = dateChooserBegin.getDate();
        java.util.Date utilEnd   = dateChooserEnd.getDate(); 
        
        entity.setPromotionID(Integer.parseInt(txtPromoID.getText()));
        entity.setPromoTitle(txtPromoTitle.getText());
        if (utilStart != null) {
            entity.setStartDate(new java.sql.Date(utilStart.getTime()));
        }
        if (utilEnd != null) {
            entity.setEndDate(new java.sql.Date(utilEnd.getTime()));
        }
        entity.setDescription(txtDesc.getText());
        entity.setDiscountValue(BigDecimal.valueOf(sliderDiscountVal.getValue()));
        entity.setActive(rdoActive.isSelected());
        return entity;
    }

    @Override
    public void create() {
        Promotion entity = this.getForm();
        dao.create(entity);
        this.fillToTable();
    }

    @Override
    public void update() {
        Promotion entity = this.getForm();
        
        dao.update(entity);
        
        this.fillToTable();
    }

    @Override
    public void delete() {
        Promotion entity = this.getForm();
        
        dao.deleteById(entity.getPromotionID());
    }

    @Override
    public void clear() {
        this.setForm(new Promotion());
    }

    @Override
    public void setEditable(boolean editable) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void fillToTable() {
        list = dao.findAll();
        model = (DefaultTableModel)tblPromos.getModel();
        model.setRowCount(0);
        
        list.forEach(item -> {
            Object[] rowData = {
              item.getPromotionID(),
              item.getPromoTitle(),
              item.getDescription(),
              item.getStartDate(),
              item.getEndDate(),
              item.isActive()? "Kích hoạt" : "Đã hủy",
              item.getDiscountValue()
            };
            model.addRow(rowData);
        });
    }

    @Override
    public void edit() {
        list = dao.findAll();
                
        Promotion entity  = list.get(tblPromos.getSelectedRow());
        
        this.setForm(entity);
        tabs.setSelectedIndex(1);
    }

        @Override
    public void checkAll() {
        this.setCheckedAll(true);
        this.clear();
    }

    @Override
    public void uncheckAll() {
       this.setCheckedAll(false);
       this.clear();
    }
    
    public void setCheckedAll(boolean checked) {
        for(int i=0; i<tblPromos.getRowCount(); i++) {
            tblPromos.setValueAt(checked,i,7);
        }
    }
    
    public void setChecked(boolean checked) {
        tblPromos.setValueAt(checked,tblPromos.getSelectedRow(),7);
        
    }

    @Override
    public void deleteCheckedItems() {
        int[] rows = tblPromos.getSelectedRows();
        
        if(XDialog.confirm("Bạn có chắc chắn xóa?")) {
            for(int row : rows) {
                Promotion promo = list.get(row);
                dao.deleteById(promo.getPromotionID());
                list.remove(row);
            }
        }
    }

    @Override
    public void moveFirst() {
        this.moveTo(0);
    }

    @Override
    public void movePrevious() {
        this.moveTo(tblPromos.getSelectedRow() -1);
    }

    @Override
    public void moveNext() {
        this.moveTo(tblPromos.getSelectedRow() +1);
    }

    @Override
    public void moveLast() {
       this.moveTo(tblPromos.getRowCount()-1);
    }

    @Override
    public void moveTo(int rowIndex) {
        if(rowIndex < 0) {
            this.moveLast();
        }else if(rowIndex >= tblPromos.getRowCount()) {
            this.moveFirst();
        }else {
            tblPromos.clearSelection();
            tblPromos.setRowSelectionInterval(rowIndex, rowIndex);
            this.edit();
        }
    }

    @Override
    public void filterByTimeRange() {
        Date begin = dateBegin.getDate();
        Date end = dateEnd.getDate();
        
        list = dao.findByTimeRange(new java.sql.Date(end.getTime()), new java.sql.Date(begin.getTime()));
        
        list.forEach(item -> {
            Object[] rowData = {
              item.getPromotionID(),
              item.getPromoTitle(),
              item.getDescription(),
              item.getStartDate(),
              item.getEndDate(),
              item.isActive() ? "Kích hoạt" : "Đã hủy",
              item.getDiscountValue()
            };
            model.addRow(rowData);
        });
    }
    
    public void exportExcel() {
          if(tblPromos.getRowCount() == 0) {
            XDialog.alert("Không tìm thấy dữ liệu!");
            }
            String[] header = {"Mã chương trình", "Tên chươnq trình", "Mô tả", "Ngày bắt đầu", "Ngày kết thúc", "Ngày kết thúc", "Trạng thái", "Mức giảm giá"};
            List<Promotion> list = dao.findAll();
            List<Object[]> listObj = new ArrayList<>();
               for(Promotion obj : list) {
                   Object[] row = {
                      obj.getPromotionID(),
                       obj.getPromoTitle(),
                       obj.getDescription(),
                       obj.getStartDate(),
                       obj.getEndDate(),
                       obj.getEndDate(),
                       obj.isActive(),
                       obj.getDiscountValue()
                   };
                  listObj.add(row);
               }
            String fileName = "Quản lý chương trình khuyến mãi";
            String title = "Chi tiết chương trình khuyến mãi";

            XFile.exportFile(this, title, header, fileName, listObj);
    }
    
    
}
