/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.projectone.ui;

import com.mycompany.projectone.controller.CheckoutController;
import com.mycompany.projectone.dao.impl.OrderDAOImpl;
import com.mycompany.projectone.dao.impl.OrderDetailDAOImpl;
import com.mycompany.projectone.entity.Order;
import com.mycompany.projectone.entity.OrderDetail;
import com.mycompany.projectone.util.XDialog;
import com.mycompany.projectone.viewmodel.OrderDetailViewModel;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gaudomun
 */
public class CheckoutJDialog extends javax.swing.JDialog implements CheckoutController {

    private Order order;
    private List<OrderDetail> odList;
    private List<OrderDetailViewModel> viewList;
    
    
    public CheckoutJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }


    public CheckoutJDialog(java.awt.Frame parent, Order order, List<OrderDetail> tempList, List<OrderDetailViewModel> tempViewList) {
        super(parent, "Thông tin hóa đơn", true);
        this.order = order;
        this.odList = tempList;
        this.viewList = tempViewList;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInfo = new javax.swing.JPanel();
        lblOrderID = new javax.swing.JLabel();
        orderID = new javax.swing.JLabel();
        lblEmp = new javax.swing.JLabel();
        empID = new javax.swing.JLabel();
        lblCustomer = new javax.swing.JLabel();
        customerID = new javax.swing.JLabel();
        lblOrderDate = new javax.swing.JLabel();
        orderDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetailedOrder = new javax.swing.JTable();
        pnlButtons = new javax.swing.JPanel();
        btnCheckout = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thông tin hóa đơn");
        setPreferredSize(new java.awt.Dimension(452, 300));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlInfo.setLayout(new java.awt.GridLayout(0, 2, 10, 5));

        lblOrderID.setText("Mã hóa đơn:");
        pnlInfo.add(lblOrderID);
        pnlInfo.add(orderID);

        lblEmp.setText("Nhân viên:");
        pnlInfo.add(lblEmp);
        pnlInfo.add(empID);

        lblCustomer.setText("Khách hàng:");
        pnlInfo.add(lblCustomer);
        pnlInfo.add(customerID);

        lblOrderDate.setText("Ngày lập:");
        pnlInfo.add(lblOrderDate);
        pnlInfo.add(orderDate);

        getContentPane().add(pnlInfo, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 100));

        tblDetailedOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sách", "Tên sách", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ));
        jScrollPane1.setViewportView(tblDetailedOrder);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        btnCheckout.setText("Thạnh toán");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        btnCancel.setText("Hủy");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblTotal.setText("Tổng cộng:");

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonsLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlButtonsLayout.createSequentialGroup()
                        .addComponent(lblTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal))
                    .addGroup(pnlButtonsLayout.createSequentialGroup()
                        .addComponent(btnCheckout)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheckout)
                    .addComponent(btnCancel))
                .addGap(28, 28, 28))
        );

        getContentPane().add(pnlButtons, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.open();
    }//GEN-LAST:event_formWindowOpened

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.cancelInvoice();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed

        this.checkoutInvoice();
        
    }//GEN-LAST:event_btnCheckoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckoutJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckoutJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckoutJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckoutJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                CheckoutJDialog dialog = new CheckoutJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JLabel customerID;
    private javax.swing.JLabel empID;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCustomer;
    private javax.swing.JLabel lblEmp;
    private javax.swing.JLabel lblOrderDate;
    private javax.swing.JLabel lblOrderID;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel orderDate;
    private javax.swing.JLabel orderID;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JTable tblDetailedOrder;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
    
    private DefaultTableModel model;
    private OrderDAOImpl orderDao = new OrderDAOImpl();
    private OrderDetailDAOImpl odDao = new OrderDetailDAOImpl();
    
    DecimalFormat df = new DecimalFormat("#,##0");
    
    @Override
    public void checkoutInvoice() {
        this.saveInvoiceToDB();
         XDialog.alert("Xuất hóa đơn thành công!");
        dispose();
    }
    
    private void saveInvoiceToDB() {
        // Lưu hóa đơn tổng
        orderDao.create(order);
        // Lưu từng chi tiết hóa đơn
        for(OrderDetail od : odList) {
            od.setOrderID(order.getOrderID());
            System.out.println("Mã hóa đơn là: " + od.getOrderID());
            odDao.create(od);
        }
    }

    @Override
    public void cancelInvoice() {
        this.dispose();
    }
    
    @Override
    public void open() {
        this.setLocationRelativeTo(null);
        this.fillInfo();
    }
    
    @Override
    public void fillInfo() {
         model = (DefaultTableModel) tblDetailedOrder.getModel();
        model.setRowCount(0); 
        this.displayInfo(order);
        for(OrderDetailViewModel view : viewList) {
            Object[] rowData = {
              view.getBookID(),
                view.getTitle(),
                view.getQuantity(),
                df.format(view.getPrice()),
                df.format(view.getTotal())
            };
            model.addRow(rowData);
        }
        
        calculateTotal();
    }
    
     public void calculateTotal() {
        //BigDecimal total = BigDecimal.valueOf(0);

        BigDecimal total = BigDecimal.ZERO;
        for(int i=0; i<tblDetailedOrder.getRowCount(); i++) {
            String valueStr = (String) tblDetailedOrder.getValueAt(i, 4);
            valueStr = valueStr.replace(",", "");
            BigDecimal value = new BigDecimal(valueStr);
            total = total.add(value);
        }  
        txtTotal.setText(df.format(total.setScale(0)));
    }
    
    public void displayInfo(Order order) {
        orderID.setText(String.valueOf(order.getOrderID()));
        empID.setText(String.valueOf(order.getEmployeeID()));
        customerID.setText(String.valueOf(order.getCustomerID()));
        orderDate.setText(String.valueOf(order.getOrderDate()));
    }
    
}
